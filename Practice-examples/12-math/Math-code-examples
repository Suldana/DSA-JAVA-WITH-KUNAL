math for data structure:
------------------------

n=20;

1:Prime number - 2,3,5,7,9,11,13,15,17,19


-algorithm:


       int n = 20;
        for (int i = 2; i <= n; i++) {
            System.out.println(i + " " + isPrime(i));
        }
    }

    static boolean isPrime(int n) {
        if (n <= 1) {
            return false;
        }

        int c = 2;
        while (c * c <= n) {
            if (n % c == 0) {
                return false;
            }
            c++;
        }
        return true;

=============================================================================================

2:sqrt - 16=4 



in java:
 
 double a = 64;
System.out.println(Math.sqrt(a))



-algorithm:



public static double squareRoot(int number) {
	double temp;

	double sr = number / 2;

	do {
		temp = sr;
		sr = (temp + (number / temp)) / 2;
	} while ((temp - sr) != 0);

	return sr;
    }

    public static void main(String[] args)  
    { 
	System.out.print("Enter any number:");
	Scanner scanner = new Scanner(System.in);
	int num = scanner.nextInt(); 
	scanner.close();

	System.out.println("Square root of "+ num+ " is: "+squareRoot(num));

}



==============================================================================================


3:HCF and GCD -(a,b)= (4,8) 4:1,2,4 -8=1,2,4,8; hcf=4 



-algorithm :


 int a, b, i, hcf = 0;
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter first number :: ");
      a = sc.nextInt();
      System.out.println("Enter second number :: ");
      b = sc.nextInt();

      for(i = 1; i <= a || i <= b; i++) {
         if( a%i == 0 && b%i == 0 )
         hcf = i;
      }
      System.out.println("HCF of given two numbers is ::"+hcf);




==============================================================================================


4:LCM - (a,b)= (2,4):8 ,(3,7):21


-algorithm :



  int n1 = 2, n2 = 4, lcm;

    lcm = (n1 > n2) ? n1 : n2;

    while(true) {
      if( lcm % n1 == 0 && lcm % n2 == 0 ) {

        System.out.printf("The LCM of %d and %d is %d.", n1, n2, lcm);

        break;
      }
      ++lcm;
    }


==============================================================================================

5:Factor - n=20 :1,2,4,5,10,20


-algorithm :



factors(20)// function calling


 static void factors(int n) {
        for (int i = 1; i <= n; i++) {
            if (n % i == 0) {
                System.out.print(i + " ");
            }
        }
    }


